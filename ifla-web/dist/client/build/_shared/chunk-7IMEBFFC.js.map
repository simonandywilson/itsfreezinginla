{
  "version": 3,
  "sources": ["../../../../node_modules/textr/index.js", "../../../../node_modules/typographic-apostrophes/index.es5.js", "../../../../node_modules/typographic-quotes-l10n-db/index.js", "../../../../node_modules/typographic-quotes/index.es5.js", "../../../../node_modules/typographic-apostrophes-for-possessive-plurals/index.es5.js", "../../../../node_modules/typographic-arrows/index.es5.js", "../../../../node_modules/typographic-copyright/index.es5.js", "../../../../node_modules/typographic-currency-db/index.es5.js", "../../../../node_modules/typographic-currency/index.es5.js", "../../../../node_modules/typographic-ellipses/index.es5.js", "../../../../node_modules/typographic-em-dashes/index.es5.js", "../../../../node_modules/typographic-en-dashes/index.es5.js", "../../../../node_modules/typographic-math-symbols/index.es5.js", "../../../../node_modules/typographic-registered-trademark/index.es5.js", "../../../../node_modules/typographic-single-spaces/index.es5.js", "../../../../node_modules/typographic-trademark/index.es5.js", "../../../../node_modules/typographic-base/index.es5.js", "../../../../app/lib/utils.ts"],
  "sourcesContent": ["'use strict';\n\n/**\n * Create new transform function\n *\n * @constructor\n * @return {object:{exec:fn,use:fn}}\n * @return {fn:exec}\n * @api public\n */\nmodule.exports = function textr(defaults) {\n\n  /**\n   * list of registred middlewares\n   * @api public\n   */\n  var mws = [];\n\n  /**\n   * Default options will be passed to either of the middlewares as second param.\n   * You can redefine props by passing your options to `tf.exec()` as second arg.\n   * @api private\n   */\n  defaults = defaults || {};\n\n  /**\n   * expose public interface of the textr\n   *\n   * @example\n   *\n   *      // functional style\n   *      text = textr()\n   *        // register plugins\n   *        .use(quotes)\n   *        .use(capitalize)\n   *        .exec(text)\n   *\n   *      // save transformer to reuse\n   *      tf = textr()\n   *        // register plugins\n   *        .use(quotes, elipses, capitalize)\n   *      ;\n   *      return ['Hello', 'world'].map(tf);\n   *\n   * @constructor\n   * @alias exec\n   */\n  function api() {\n    return exec.apply(null, arguments);\n  }\n\n  /**\n   * Expose `exec`, `use` and `mws` as properties\n   * of the `api`\n   *\n   * @alias exec\n   * @alias use\n   * @alias mws\n   */\n  api.exec = exec;\n  api.use = use;\n  api.mws = mws;\n\n  return api;\n\n  /**\n   * process given text by the middlewares\n   * @param {string} text\n   * @param {Object} options Options to merge with defaults\n   * @return {string} text\n   * @api public\n   */\n  function exec(text, options) {\n    options = clone(defaults, options);\n    var l = mws.length;\n    for (var i = 0; i < l; i++) {\n      text = mws[i].apply(text, [text, options]) || text;\n    }\n    return text;\n  }\n\n  /**\n   * Register either middleware and array of middlewares\n   * @param {...fn} ...middlewares\n   * @return {api}\n   * @api public\n   */\n  function use() {\n    [].push.apply(mws, arguments);\n    return api;\n  }\n\n};\n\n/**\n * merge given objects to new one. Returns clone\n * @param {Object} ...objects Objects to clone into the one new\n * @return {Object}\n */\nfunction clone() {\n  var res = {};\n  var length = arguments.length;\n  for (var i = 0; i < length; i++) {\n    var obj = arguments[i];\n    for (var k in obj) { res[k] = obj[k]; }\n  }\n  return res;\n}\n", "\"use strict\";\n\nmodule.exports = function (input) {\n      return input.replace(/ 'n' /gim, \" \u2019n\u2019 \").replace(/'n'/gim, \"\u2019n\u2019\").replace(/(\\S)'(\\S)/gim, \"$1\u2019$2\").replace(/'(\\d0s)/gim, \"\u2019$1\");\n};\n\n", "// Quotes              https://en.wikipedia.org/wiki/Quotation_mark\n// Language codes:     https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\nmodule.exports = {\n  'af':      '\u201C\u201D\u2018\u2019',   // Afrikaans\n  'sq':      '\u201E\u201C\u2018\u2019',   // Albanian\n  'az':      '\u00AB\u00BB\u2039\u203A',   // Azerbaijani\n  'eu':      '\u00AB\u00BB\u2039\u203A',   // Basque\n  'be':      '\u00AB\u00BB\u201C\u201D',   // Belarusian\n  'bg':      '\u201E\u201C\u2019\u2019',   // Bulgarian\n  'ca':      '\u00AB\u00BB\u201C\u201D',   // Catalan\n  'zh-Hans': '\u201C\u201D\u2018\u2019',   // Chinese, simplified\n  'hr':      '\u201E\u201D\u2018\u2019',   // Croatian\n  'cs':      '\u201E\u201C\u201A\u2018',   // Czech\n  'da':      '\u00BB\u00AB\u203A\u2039',   // Danish\n  'nl':      '\u2018\u2019\u201C\u201D',   // Dutch\n  'en-uk':   '\u2018\u2019\u201C\u201D',   // English, UK\n  'en-us':   '\u201C\u201D\u2018\u2019',   // English, US; English, Canada\n  'eo':      '\u201C\u201D\u2018\u2019',   // Esperanto\n  'et':      '\u201E\u201C\u00AB\u00BB',   // Estonian\n  'fil':     '\u201C\u201D\u2018\u2019',   // Filipino\n  'fi':      '\u201D\u201D\u2019\u2019',   // Finnish\n  'fr':      '\u00AB\u00BB\u201C\u201D',   // French\n  'fr-sw':   '\u00AB\u00BB\u2039\u203A',   // French, Swiss\n  'ka':      '\u201E\u201C\u201C\u201D',   // Georgian\n  'de':      '\u201E\u201C\u201A\u2018',   // German\n  'de-sw':   '\u00AB\u00BB\u2039\u203A',   // German, Swiss\n  'el':      '\u00AB\u00BB\u201C\u201D',   // Greek\n  'he':      '\"\"\\'\\'', // Hebrew\n  'hu':      '\u201E\u201D\u00BB\u00AB',   // Hungarian\n  'is':      '\u201E\u201C\u201A\u2018',   // Icelandic\n  'id':      '\u201C\u201D\u2018\u2019',   // Indonesian\n  'ga':      '\u201C\u201D\u2018\u2019',   // Irish\n  'it':      '\u00AB\u00BB\u201C\u201D',   // Italian\n  'it-sw':   '\u00AB\u00BB\u2039\u203A',   // Italian, Swiss\n  'ko':      '\u201C\u201D\u2018\u2019',   // Korean\n  'lv':      '\u00AB\u00BB\u201E\u201C',   // Latvian\n  'mk':      '\u201E\u201C\u2019\u2018',   // Macedonian\n  'no':      '\u00AB\u00BB\u2019\u2019',   // Norwegian\n  'pl':      '\u201E\u201D\u00AB\u00BB',   // Polish\n  'pt-br':   '\u201C\u201D\u2018\u2019',   // Portuguese, Brazil\n  'pt-pl':   '\u00AB\u00BB\u201C\u201D',   // Portuguese, Portugal\n  'ro':      '\u201E\u201D\u00AB\u00BB',   // Romanian\n  'ru':      '\u00AB\u00BB\u201E\u201C',   // Russian\n  'sr':      '\u201E\u201D\u2019\u2019',   // Serbian\n  'sk':      '\u201E\u201C\u201A\u2018',   // Slovak\n  'sl':      '\u201E\u201C\u201A\u2018',   // Slovene\n  'es':      '\u00AB\u00BB\u201C\u201D',   // Spanish\n  'sv':      '\u201D\u201D\u2019\u2019',   // Swedish\n  'th':      '\u201C\u201D\u2018\u2019',   // Thai\n  'tr':      '\u201C\u201D\u2018\u2019',   // Turkish\n  'uk':      '\u00AB\u00BB\u201E\u201C',   // Ukrainian\n  'cy':      '\u2018\u2019\u201C\u201D'    // Welsh\n};\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = typographicQuotes;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _typographicQuotesL10nDb = require('typographic-quotes-l10n-db');\n\nvar _typographicQuotesL10nDb2 = _interopRequireDefault(_typographicQuotesL10nDb);\n\nfunction typographicQuotes() {\n  var input = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n\n  var _ref = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n  var _ref$locale = _ref.locale;\n  var locale = _ref$locale === undefined ? 'en-us' : _ref$locale;\n\n  var separator = '';\n  var localeQuotes = _typographicQuotesL10nDb2['default'][locale];\n  var pattern = /(^|\\s)(?:\"(.*?)\"|'(.*?)')(\\s|$|\\.|,|\\?|!)/gim;\n  var handleQuotes = function handleQuotes(quotes, cb) {\n    return function (match) {\n      var before = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];\n      var part1 = arguments.length <= 2 || arguments[2] === undefined ? '' : arguments[2];\n      var part2 = arguments.length <= 3 || arguments[3] === undefined ? '' : arguments[3];\n      var after = arguments.length <= 4 || arguments[4] === undefined ? '' : arguments[4];\n\n      var text = part1 + part2;\n      if (cb) {\n        text = text.replace(pattern, cb);\n      }\n      if (locale === 'fr') {\n        separator = '\u00A0';\n      }\n      return '' + before + quotes[0] + separator + text + separator + quotes[1] + after;\n    };\n  };\n\n  return input.replace(pattern, handleQuotes(localeQuotes.slice(0, 2), handleQuotes(localeQuotes.slice(2, 4))));\n}\n\nmodule.exports = exports['default'];\n\n", "\"use strict\";\n\nmodule.exports = function (input) {\n  return input.replace(/s'(\\s|$)/gim, \"s\u2019$1\");\n};\n\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = typographicArrows;\nfunction typographicArrows(input) {\n  return input.replace(/<->/gim, '\u2194').replace(/<=>/gim, '\u21D4').replace(/<-/gim, '\u2190').replace(/->/gim, '\u2192').replace(/<=/gim, '\u21D0').replace(/=>/gim, '\u21D2');\n}\nmodule.exports = exports['default'];\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function (input) {\n  return input.replace(/\\(c\\)/gim, '\u00A9').replace(/\u00A9 *(\\d)/gim, '\u00A9\u00A0$1');\n};\n\nmodule.exports = exports['default'];\n\n", "// ISO_4217: unicode // symbol\n// http://www.unicode.org/charts/PDF/U20A0.pdf\n\n'use strict';\n\nmodule.exports = {\n  'AFN': '\u060B', // \u060B\n  'AMD': '\u058F', // \u058F\n  'ANG': '\u0192', // \u0192\n  'AWG': '\u0192', // \u0192\n  'AZN': '\u20BC', // \u20BC\n  'BDT': '\u09F3', // \u09F3\n  'BTC': '\u0243', // \u0243\n  'CNY': '\u00A5', // \u00A5\n  'CRC': '\u20A1', // \u20A1\n  'EUR': '\u20AC', // \u20AC\n  'FKP': '\u00A3', // \u00A3\n  'GBP': '\u00A3', // \u00A3\n  'GHS': '\u20B5', // \u20B5\n  'GIP': '\u00A3', // \u00A3\n  'ILS': '\u20AA', // \u20AA\n  'INR': '\u20B9', // \u20B9\n  'IRR': '\uFDFC', // \uFDFC\n  'JPY': '\u00A5', // \u00A5\n  'KHR': '\u17DB', // \u17DB\n  'KPW': '\u20A9', // \u20A9\n  'KRW': '\u20A9', // \u20A9\n  'KZT': '\u20B8', // \u20B8\n  'LAK': '\u20AD', // \u20AD\n  'LKR': '\u20A8', // \u20A8\n  'MNT': '\u20AE', // \u20AE\n  'MTL': '\u20A4', // \u20A4\n  'MUR': '\u20A8', // \u20A8\n  'NGN': '\u20A6', // \u20A6\n  'NPR': '\u20A8', // \u20A8\n  'OMR': '\uFDFC', // \uFDFC\n  'PHP': '\u20B1', // \u20B1\n  'PKR': '\u20A8', // \u20A8\n  'PYG': '\u20B2', // \u20B2\n  'QAR': '\uFDFC', // \uFDFC\n  'RUB': '\u20BD', // \u20BD\n  'SAR': '\uFDFC', // \uFDFC\n  'SCR': '\u20A8', // \u20A8\n  'SDG': '\u00A3', // \u00A3\n  'SHP': '\u00A3', // \u00A3\n  'SVC': '\u20A1', // \u20A1\n  'SYP': '\u00A3', // \u00A3\n  'THB': '\u0E3F', // \u0E3F\n  'UAH': '\u20B4', // \u20B4\n  'USD': '$', // $\n  'VND': '\u20AB', // \u20AB\n  'YER': '\uFDFC' // \uFDFC\n};\n\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = typographicCurrency;\n\nvar _typographicCurrencyDb = require('typographic-currency-db');\n\nvar _typographicCurrencyDb2 = _interopRequireDefault(_typographicCurrencyDb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar pattern = function pattern(key) {\n  return new RegExp('([^a-z]|\\\\b)(' + key + ')\\\\b', 'gi');\n};\n\nfunction typographicCurrency(input) {\n  if (!input) return;\n  return Object.keys(_typographicCurrencyDb2.default).reduce(function (state, key) {\n    return state.replace(pattern(key), '$1' + _typographicCurrencyDb2.default[key]);\n  }, input);\n};\n", "'use strict';\n\nmodule.exports = function (input) {\n  return input.replace(/\\.{3}/gim, '\u2026');\n};\n\n", "\"use strict\";\n\nmodule.exports = function (input) {\n  return input.replace(/--/gim, \"\u2014\").replace(/ \u2014 /gim, \"\u200A\u2014\u200A\");\n};\n\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function (input) {\n  return input.replace(/(\\d)-(\\d)/gim, '$1\u2013$2');\n};\n\nmodule.exports = exports['default'];\n\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function (input) {\n  return input.replace(/(\\d) x (\\d)/gim, '$1 \u00D7 $2').replace(/(\\d) - (\\d)/gim, '$1 \u2212 $2').replace(/(\\w) >> (\\w)/gim, '$1 \u226B $2').replace(/(\\w) << (\\w)/gim, '$1 \u226A $2').replace(/(\\w) >= (\\w)/gim, '$1 \u2265 $2').replace(/(\\w) <= (\\w)/gim, '$1 \u2264 $2').replace(/\\+-/gim, '\u00B1').replace(/-\\+/gim, '\u2213');\n};\n\nmodule.exports = exports['default'];\n\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function (input) {\n  return input.replace(/\\(r\\)/gim, '\u00AE');\n};\n\nmodule.exports = exports['default'];\n\n", "\"use strict\";\n\nmodule.exports = function (input) {\n  return input.replace(/ +/gim, \" \");\n};\n\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function (input) {\n  return input.replace(/ *\\(tm\\)/gim, '\u2122');\n};\n\nmodule.exports = exports['default'];\n\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _textr = require('textr');\n\nvar _textr2 = _interopRequireDefault(_textr);\n\nvar _typographicApostrophes = require('typographic-apostrophes');\n\nvar _typographicApostrophes2 = _interopRequireDefault(_typographicApostrophes);\n\nvar _typographicQuotes = require('typographic-quotes');\n\nvar _typographicQuotes2 = _interopRequireDefault(_typographicQuotes);\n\nvar _typographicApostrophesForPossessivePlurals = require('typographic-apostrophes-for-possessive-plurals');\n\nvar _typographicApostrophesForPossessivePlurals2 = _interopRequireDefault(_typographicApostrophesForPossessivePlurals);\n\nvar _typographicArrows = require('typographic-arrows');\n\nvar _typographicArrows2 = _interopRequireDefault(_typographicArrows);\n\nvar _typographicCopyright = require('typographic-copyright');\n\nvar _typographicCopyright2 = _interopRequireDefault(_typographicCopyright);\n\nvar _typographicCurrency = require('typographic-currency');\n\nvar _typographicCurrency2 = _interopRequireDefault(_typographicCurrency);\n\nvar _typographicEllipses = require('typographic-ellipses');\n\nvar _typographicEllipses2 = _interopRequireDefault(_typographicEllipses);\n\nvar _typographicEmDashes = require('typographic-em-dashes');\n\nvar _typographicEmDashes2 = _interopRequireDefault(_typographicEmDashes);\n\nvar _typographicEnDashes = require('typographic-en-dashes');\n\nvar _typographicEnDashes2 = _interopRequireDefault(_typographicEnDashes);\n\nvar _typographicMathSymbols = require('typographic-math-symbols');\n\nvar _typographicMathSymbols2 = _interopRequireDefault(_typographicMathSymbols);\n\nvar _typographicRegisteredTrademark = require('typographic-registered-trademark');\n\nvar _typographicRegisteredTrademark2 = _interopRequireDefault(_typographicRegisteredTrademark);\n\nvar _typographicSingleSpaces = require('typographic-single-spaces');\n\nvar _typographicSingleSpaces2 = _interopRequireDefault(_typographicSingleSpaces);\n\nvar _typographicTrademark = require('typographic-trademark');\n\nvar _typographicTrademark2 = _interopRequireDefault(_typographicTrademark);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar base = (0, _textr2.default)().use(_typographicApostrophes2.default, _typographicQuotes2.default, _typographicApostrophesForPossessivePlurals2.default, _typographicArrows2.default, _typographicCopyright2.default, _typographicCurrency2.default, _typographicEllipses2.default, _typographicEmDashes2.default, _typographicEnDashes2.default, _typographicMathSymbols2.default, _typographicRegisteredTrademark2.default, _typographicSingleSpaces2.default, _typographicTrademark2.default);\n\nexports.default = base;\nmodule.exports = exports['default'];\n", "import {useLocation, useMatches} from '@remix-run/react';\nimport type {\n  MenuItem,\n  Menu,\n  MoneyV2,\n} from '@shopify/hydrogen/storefront-api-types';\n\n// @ts-expect-error types not available\nimport typographicBase from 'typographic-base';\nimport {countries} from '~/data/countries';\nimport {I18nLocale, Locale} from './type';\n\nexport interface EnhancedMenuItem extends MenuItem {\n  to: string;\n  target: string;\n  isExternal?: boolean;\n  items: EnhancedMenuItem[];\n}\n\nexport interface EnhancedMenu extends Menu {\n  items: EnhancedMenuItem[];\n}\n\nexport function missingClass(string?: string, prefix?: string) {\n  if (!string) {\n    return true;\n  }\n\n  const regex = new RegExp(` ?${prefix}`, 'g');\n  return string.match(regex) === null;\n}\n\nexport function formatText(input?: string | React.ReactNode) {\n  if (!input) {\n    return;\n  }\n\n  if (typeof input !== 'string') {\n    return input;\n  }\n\n  return typographicBase(input, {locale: 'en-us'}).replace(\n    /\\s([^\\s<]+)\\s*$/g,\n    '\\u00A0$1',\n  );\n}\n\nexport function getExcerpt(text: string) {\n  const regex = /<p.*>(.*?)<\\/p>/;\n  const match = regex.exec(text);\n  return match?.length ? match[0] : text;\n}\n\nexport function isNewArrival(date: string, daysOld = 30) {\n  return (\n    new Date(date).valueOf() >\n    new Date().setDate(new Date().getDate() - daysOld).valueOf()\n  );\n}\n\nexport function isDiscounted(price: MoneyV2, compareAtPrice: MoneyV2) {\n  if (compareAtPrice?.amount > price?.amount) {\n    return true;\n  }\n  return false;\n}\n\nfunction resolveToFromType(\n  {\n    customPrefixes,\n    pathname,\n    type,\n  }: {\n    customPrefixes: Record<string, string>;\n    pathname?: string;\n    type?: string;\n  } = {\n    customPrefixes: {},\n  },\n) {\n  if (!pathname || !type) return '';\n\n  /*\n    MenuItemType enum\n    @see: https://shopify.dev/api/storefront/unstable/enums/MenuItemType\n  */\n  const defaultPrefixes = {\n    BLOG: 'blogs',\n    COLLECTION: 'collections',\n    COLLECTIONS: 'collections', // Collections All (not documented)\n    FRONTPAGE: 'frontpage',\n    HTTP: '',\n    PAGE: 'pages',\n    CATALOG: 'collections/all', // Products All\n    PRODUCT: 'products',\n    SEARCH: 'search',\n    SHOP_POLICY: 'policies',\n  };\n\n  const pathParts = pathname.split('/');\n  const handle = pathParts.pop() || '';\n  const routePrefix: Record<string, string> = {\n    ...defaultPrefixes,\n    ...customPrefixes,\n  };\n\n  switch (true) {\n    // special cases\n    case type === 'FRONTPAGE':\n      return '/';\n\n    case type === 'ARTICLE': {\n      const blogHandle = pathParts.pop();\n      return routePrefix.BLOG\n        ? `/${routePrefix.BLOG}/${blogHandle}/${handle}/`\n        : `/${blogHandle}/${handle}/`;\n    }\n\n    case type === 'COLLECTIONS':\n      return `/${routePrefix.COLLECTIONS}`;\n\n    case type === 'SEARCH':\n      return `/${routePrefix.SEARCH}`;\n\n    case type === 'CATALOG':\n      return `/${routePrefix.CATALOG}`;\n\n    // common cases: BLOG, PAGE, COLLECTION, PRODUCT, SHOP_POLICY, HTTP\n    default:\n      return routePrefix[type]\n        ? `/${routePrefix[type]}/${handle}`\n        : `/${handle}`;\n  }\n}\n\n/*\n  Parse each menu link and adding, isExternal, to and target\n*/\nfunction parseItem(customPrefixes = {}) {\n  return function (item: MenuItem): EnhancedMenuItem {\n    if (!item?.url || !item?.type) {\n      // eslint-disable-next-line no-console\n      console.warn('Invalid menu item.  Must include a url and type.');\n      // @ts-ignore\n      return;\n    }\n\n    // extract path from url because we don't need the origin on internal to attributes\n    const {pathname} = new URL(item.url);\n\n    /*\n      Currently the MenuAPI only returns online store urls e.g \u2014 xyz.myshopify.com/..\n      Note: update logic when API is updated to include the active qualified domain\n    */\n    const isInternalLink = /\\.myshopify\\.com/g.test(item.url);\n\n    const parsedItem = isInternalLink\n      ? // internal links\n        {\n          ...item,\n          isExternal: false,\n          target: '_self',\n          to: resolveToFromType({type: item.type, customPrefixes, pathname}),\n        }\n      : // external links\n        {\n          ...item,\n          isExternal: true,\n          target: '_blank',\n          to: item.url,\n        };\n\n    return {\n      ...parsedItem,\n      items: item.items?.map(parseItem(customPrefixes)),\n    };\n  };\n}\n\n/*\n  Recursively adds `to` and `target` attributes to links based on their url\n  and resource type.\n  It optionally overwrites url paths based on item.type\n*/\nexport function parseMenu(menu: Menu, customPrefixes = {}): EnhancedMenu {\n  if (!menu?.items) {\n    // eslint-disable-next-line no-console\n    console.warn('Invalid menu passed to parseMenu');\n    // @ts-ignore\n    return menu;\n  }\n\n  return {\n    ...menu,\n    items: menu.items.map(parseItem(customPrefixes)),\n  };\n}\n\nexport const INPUT_STYLE_CLASSES =\n  'appearance-none rounded dark:bg-transparent border focus:border-primary/50 focus:ring-0 w-full py-2 px-3 text-primary/90 placeholder:text-primary/50 leading-tight focus:shadow-outline';\n\nexport const getInputStyleClasses = (isError?: string | null) => {\n  return `${INPUT_STYLE_CLASSES} ${\n    isError ? 'border-red-500' : 'border-primary/20'\n  }`;\n};\n\nexport function statusMessage(status: string) {\n  const translations: Record<string, string> = {\n    ATTEMPTED_DELIVERY: 'Attempted delivery',\n    CANCELED: 'Canceled',\n    CONFIRMED: 'Confirmed',\n    DELIVERED: 'Delivered',\n    FAILURE: 'Failure',\n    FULFILLED: 'Fulfilled',\n    IN_PROGRESS: 'In Progress',\n    IN_TRANSIT: 'In transit',\n    LABEL_PRINTED: 'Label printed',\n    LABEL_PURCHASED: 'Label purchased',\n    LABEL_VOIDED: 'Label voided',\n    MARKED_AS_FULFILLED: 'Marked as fulfilled',\n    NOT_DELIVERED: 'Not delivered',\n    ON_HOLD: 'On Hold',\n    OPEN: 'Open',\n    OUT_FOR_DELIVERY: 'Out for delivery',\n    PARTIALLY_FULFILLED: 'Partially Fulfilled',\n    PENDING_FULFILLMENT: 'Pending',\n    PICKED_UP: 'Displayed as Picked up',\n    READY_FOR_PICKUP: 'Ready for pickup',\n    RESTOCKED: 'Restocked',\n    SCHEDULED: 'Scheduled',\n    SUBMITTED: 'Submitted',\n    UNFULFILLED: 'Unfulfilled',\n  };\n  try {\n    return translations?.[status];\n  } catch (error) {\n    return status;\n  }\n}\n\n/**\n * Errors can exist in an errors object, or nested in a data field.\n */\nexport function assertApiErrors(data: Record<string, any> | null | undefined) {\n  const errorMessage = data?.customerUserErrors?.[0]?.message;\n  if (errorMessage) {\n    throw new Error(errorMessage);\n  }\n}\n\nexport const DEFAULT_LOCALE: I18nLocale = Object.freeze({\n  ...countries.default,\n  pathPrefix: '',\n});\n\nexport function getLocaleFromRequest(request: Request): I18nLocale {\n  const url = new URL(request.url);\n  const firstPathPart =\n    '/' + url.pathname.substring(1).split('/')[0].toLowerCase();\n\n  return countries[firstPathPart]\n    ? {\n        ...countries[firstPathPart],\n        pathPrefix: firstPathPart,\n      }\n    : {\n        ...countries['default'],\n        pathPrefix: '',\n      };\n}\n\nexport function usePrefixPathWithLocale(path: string) {\n  const [root] = useMatches();\n  const selectedLocale = root.data?.selectedLocale ?? DEFAULT_LOCALE;\n\n  return `${selectedLocale.pathPrefix}${\n    path.startsWith('/') ? path : '/' + path\n  }`;\n}\n\nexport function useIsHomePath() {\n  const {pathname} = useLocation();\n  const [root] = useMatches();\n  const selectedLocale = root.data?.selectedLocale ?? DEFAULT_LOCALE;\n  const strippedPathname = pathname.replace(selectedLocale.pathPrefix, '');\n  return strippedPathname === '/';\n}\n\n/**\n * Validates that a url is local\n * @param url\n * @returns `true` if local `false`if external domain\n */\nexport function isLocalPath(url: string) {\n  try {\n    // We don't want to redirect cross domain,\n    // doing so could create fishing vulnerability\n    // If `new URL()` succeeds, it's a fully qualified\n    // url which is cross domain. If it fails, it's just\n    // a path, which will be the current domain.\n    new URL(url);\n  } catch (e) {\n    return true;\n  }\n\n  return false;\n}\n"],
  "mappings": "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",
  "names": ["require_index_es5", "handleQuotes", "require_index_es5", "require_index_es5", "require_index_es5", "require_index_es5", "require_index_es5", "pattern", "require_index_es5", "require_index_es5", "require_index_es5", "require_index_es5", "require_index_es5", "require_index_es5", "require_index_es5", "require_index_es5", "typographicBase"]
}
