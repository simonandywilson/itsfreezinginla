{
  "version": 3,
  "sources": ["../../../../../../../app/routes/($lang)/account/__public/recover.tsx"],
  "sourcesContent": ["import {\n  json,\n  redirect,\n  type MetaFunction,\n  type ActionFunction,\n  type LoaderArgs,\n} from '@shopify/remix-oxygen';\nimport {Form, useActionData} from '@remix-run/react';\nimport {useState} from 'react';\nimport {Link} from '~/components';\nimport {getInputStyleClasses} from '~/lib/utils';\nimport type {CustomerRecoverPayload} from '@shopify/hydrogen/storefront-api-types';\n\nexport async function loader({context, params}: LoaderArgs) {\n  const customerAccessToken = await context.session.get('customerAccessToken');\n\n  if (customerAccessToken) {\n    return redirect(params.lang ? `${params.lang}/account` : '/account');\n  }\n\n  return new Response(null);\n}\n\ntype ActionData = {\n  formError?: string;\n  resetRequested?: boolean;\n};\n\nconst badRequest = (data: ActionData) => json(data, {status: 400});\n\nexport const action: ActionFunction = async ({request, context}) => {\n  const formData = await request.formData();\n  const email = formData.get('email');\n\n  if (!email || typeof email !== 'string') {\n    return badRequest({\n      formError: 'Please provide an email.',\n    });\n  }\n\n  try {\n    await context.storefront.mutate<{\n      customerRecover: CustomerRecoverPayload;\n    }>(CUSTOMER_RECOVER_MUTATION, {\n      variables: {email},\n    });\n\n    return json({resetRequested: true});\n  } catch (error: any) {\n    return badRequest({\n      formError: 'Something went wrong. Please try again later.',\n    });\n  }\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: 'Recover Password',\n  };\n};\n\nexport default function Recover() {\n  const actionData = useActionData<ActionData>();\n  const [nativeEmailError, setNativeEmailError] = useState<null | string>(null);\n  const isSubmitted = actionData?.resetRequested;\n\n  return (\n    <div className=\"flex justify-center my-24 px-4\">\n      <div className=\"max-w-md w-full\">\n        {isSubmitted ? (\n          <>\n            <h1 className=\"text-4xl\">Request Sent.</h1>\n            <p className=\"mt-4\">\n              If that email address is in our system, you will receive an email\n              with instructions about how to reset your password in a few\n              minutes.\n            </p>\n          </>\n        ) : (\n          <>\n            <h1 className=\"text-4xl\">Forgot Password.</h1>\n            <p className=\"mt-4\">\n              Enter the email address associated with your account to receive a\n              link to reset your password.\n            </p>\n            {/* TODO: Add onSubmit to validate _before_ submission with native? */}\n            <Form\n              method=\"post\"\n              noValidate\n              className=\"pt-6 pb-8 mt-4 mb-4 space-y-3\"\n            >\n              {actionData?.formError && (\n                <div className=\"flex items-center justify-center mb-6 bg-zinc-500\">\n                  <p className=\"m-4 text-s text-contrast\">\n                    {actionData.formError}\n                  </p>\n                </div>\n              )}\n              <div>\n                <input\n                  className={`mb-1 ${getInputStyleClasses(nativeEmailError)}`}\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  placeholder=\"Email address\"\n                  aria-label=\"Email address\"\n                  // eslint-disable-next-line jsx-a11y/no-autofocus\n                  autoFocus\n                  onBlur={(event) => {\n                    setNativeEmailError(\n                      event.currentTarget.value.length &&\n                        !event.currentTarget.validity.valid\n                        ? 'Invalid email address'\n                        : null,\n                    );\n                  }}\n                />\n                {nativeEmailError && (\n                  <p className=\"text-red-500 text-xs\">\n                    {nativeEmailError} &nbsp;\n                  </p>\n                )}\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <button\n                  className=\"bg-primary text-contrast rounded py-2 px-4 focus:shadow-outline block w-full\"\n                  type=\"submit\"\n                >\n                  Request Reset Link\n                </button>\n              </div>\n              <div className=\"flex items-center mt-8 border-t border-gray-300\">\n                <p className=\"align-baseline text-sm mt-6\">\n                  Return to &nbsp;\n                  <Link className=\"inline underline\" to=\"/account/login\">\n                    Login\n                  </Link>\n                </p>\n              </div>\n            </Form>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst CUSTOMER_RECOVER_MUTATION = `#graphql\n  mutation customerRecover($email: String!) {\n    customerRecover(email: $email) {\n      customerUserErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAAA,gBAAuB;AA8Db;AAfH,IAAM,OAAqB,MAAM;AACtC,SAAO;AAAA,IACL,OAAO;AAAA,EACT;AACF;AAEe,SAAR,UAA2B;AAChC,QAAM,aAAa,cAA0B;AAC7C,QAAM,CAAC,kBAAkB,mBAAmB,QAAI,wBAAwB,IAAI;AAC5E,QAAM,cAAc,YAAY;AAEhC,SACE,mDAAC,SAAI,WAAU,kCACb,6DAAC,SAAI,WAAU,mBACZ,wBACC,sFACE;AAAA,uDAAC,QAAG,WAAU,YAAW,6BAAzB;AAAA;AAAA;AAAA;AAAA,WAAsC;AAAA,IACtC,mDAAC,OAAE,WAAU,QAAO,sJAApB;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OANF;AAAA;AAAA;AAAA;AAAA,SAOA,IAEA,sFACE;AAAA,uDAAC,QAAG,WAAU,YAAW,gCAAzB;AAAA;AAAA;AAAA;AAAA,WAAyC;AAAA,IACzC,mDAAC,OAAE,WAAU,QAAO,8GAApB;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IAEA;AAAA,MAAC;AAAA;AAAA,QACC,QAAO;AAAA,QACP,YAAU;AAAA,QACV,WAAU;AAAA,QAET;AAAA,sBAAY,aACX,mDAAC,SAAI,WAAU,qDACb,6DAAC,OAAE,WAAU,4BACV,qBAAW,aADd;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UAEF,mDAAC,SACC;AAAA;AAAA,cAAC;AAAA;AAAA,gBACC,WAAW,QAAQ,qBAAqB,gBAAgB;AAAA,gBACxD,IAAG;AAAA,gBACH,MAAK;AAAA,gBACL,MAAK;AAAA,gBACL,cAAa;AAAA,gBACb,UAAQ;AAAA,gBACR,aAAY;AAAA,gBACZ,cAAW;AAAA,gBAEX,WAAS;AAAA,gBACT,QAAQ,CAAC,UAAU;AACjB;AAAA,oBACE,MAAM,cAAc,MAAM,UACxB,CAAC,MAAM,cAAc,SAAS,QAC5B,0BACA;AAAA,kBACN;AAAA,gBACF;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAmBA;AAAA,YACC,oBACC,mDAAC,OAAE,WAAU,wBACV;AAAA;AAAA,cAAiB;AAAA,iBADpB;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eAxBJ;AAAA;AAAA;AAAA;AAAA,iBA0BA;AAAA,UACA,mDAAC,SAAI,WAAU,qCACb;AAAA,YAAC;AAAA;AAAA,cACC,WAAU;AAAA,cACV,MAAK;AAAA,cACN;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA,KANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA,UACA,mDAAC,SAAI,WAAU,mDACb,6DAAC,OAAE,WAAU,+BAA8B;AAAA;AAAA,YAEzC,mDAAC,QAAK,WAAU,oBAAmB,IAAG,kBAAiB,qBAAvD;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA,iBAKA,KANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA;AAAA;AAAA,MAtDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAuDA;AAAA,OA9DF;AAAA;AAAA;AAAA;AAAA,SA+DA,KA1EJ;AAAA;AAAA;AAAA;AAAA,SA4EA,KA7EF;AAAA;AAAA;AAAA;AAAA,SA8EA;AAEJ;",
  "names": ["import_react"]
}
