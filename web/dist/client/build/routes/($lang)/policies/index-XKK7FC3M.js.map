{
  "version": 3,
  "sources": ["../../../../../../app/routes/($lang)/policies/index.tsx"],
  "sourcesContent": ["import {json, type LoaderArgs} from '@shopify/remix-oxygen';\nimport {useLoaderData} from '@remix-run/react';\nimport type {ShopPolicy} from '@shopify/hydrogen/storefront-api-types';\nimport invariant from 'tiny-invariant';\n\nimport {PageHeader, Section, Heading, Link} from '~/components';\n\nexport const handle = {\n  seo: {\n    title: 'Policies',\n  },\n};\n\nexport async function loader({context: {storefront}}: LoaderArgs) {\n  const data = await storefront.query<{\n    shop: Record<string, ShopPolicy>;\n  }>(POLICIES_QUERY);\n\n  invariant(data, 'No data returned from Shopify API');\n  const policies = Object.values(data.shop || {});\n\n  if (policies.length === 0) {\n    throw new Response('Not found', {status: 404});\n  }\n\n  return json(\n    {\n      policies,\n    },\n    {\n      headers: {\n        // TODO cacheLong()\n      },\n    },\n  );\n}\n\nexport default function Policies() {\n  const {policies} = useLoaderData<typeof loader>();\n\n  return (\n    <>\n      <PageHeader heading=\"Policies\" />\n      <Section padding=\"x\" className=\"mb-24\">\n        {policies.map((policy) => {\n          return (\n            policy && (\n              <Heading className=\"font-normal text-heading\" key={policy.id}>\n                <Link to={`/policies/${policy.handle}`}>{policy.title}</Link>\n              </Heading>\n            )\n          );\n        })}\n      </Section>\n    </>\n  );\n}\n\nconst POLICIES_QUERY = `#graphql\n  fragment Policy on ShopPolicy {\n    id\n    title\n    handle\n  }\n\n  query PoliciesQuery {\n    shop {\n      privacyPolicy {\n        ...Policy\n      }\n      shippingPolicy {\n        ...Policy\n      }\n      termsOfService {\n        ...Policy\n      }\n      refundPolicy {\n        ...Policy\n      }\n      subscriptionPolicy {\n        id\n        title\n        handle\n      }\n    }\n  }\n`;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAyCI;AAlCG,IAAM,SAAS;AAAA,EACpB,KAAK;AAAA,IACH,OAAO;AAAA,EACT;AACF;AA0Be,SAAR,WAA4B;AACjC,QAAM,EAAC,SAAQ,IAAI,cAA6B;AAEhD,SACE,sFACE;AAAA,uDAAC,cAAW,SAAQ,cAApB;AAAA;AAAA;AAAA;AAAA,WAA+B;AAAA,IAC/B,mDAAC,WAAQ,SAAQ,KAAI,WAAU,SAC5B,mBAAS,IAAI,CAAC,WAAW;AACxB,aACE,UACE,mDAAC,WAAQ,WAAU,4BACjB,6DAAC,QAAK,IAAI,aAAa,OAAO,UAAW,iBAAO,SAAhD;AAAA;AAAA;AAAA;AAAA,aAAsD,KADL,OAAO,IAA1D;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,IAGN,CAAC,KATH;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,OAZF;AAAA;AAAA;AAAA;AAAA,SAaA;AAEJ;",
  "names": []
}
