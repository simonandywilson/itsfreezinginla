{
  "version": 3,
  "sources": ["../../../app/components/FeaturedSection.tsx", "../../../app/components/GenericError.tsx", "../../../app/components/NotFound.tsx", "../../../app/hooks/useAnalytics.tsx", "../../../app/root.tsx"],
  "sourcesContent": ["import {useEffect} from 'react';\nimport {useFetcher} from '@remix-run/react';\nimport type {Collection, Product} from '@shopify/hydrogen/storefront-api-types';\nimport {FeaturedCollections} from './FeaturedCollections';\nimport {ProductSwimlane} from './ProductSwimlane';\nimport {usePrefixPathWithLocale} from '~/lib/utils';\n\nexport interface FeaturedData {\n  featuredCollections: Collection[];\n  featuredProducts: Product[];\n}\n\nexport function FeaturedSection() {\n  const {load, data} = useFetcher();\n  const path = usePrefixPathWithLocale('/featured-products');\n\n  useEffect(() => {\n    load(path);\n  }, [load, path]);\n\n  if (!data) return null;\n\n  const {featuredCollections, featuredProducts} = data as FeaturedData;\n\n  return (\n    <>\n      {featuredCollections.length < 2 && (\n        <FeaturedCollections\n          title=\"Popular Collections\"\n          collections={featuredCollections}\n        />\n      )}\n      <ProductSwimlane products={featuredProducts} />\n    </>\n  );\n}\n", "import {Button} from './Button';\nimport {FeaturedSection} from './FeaturedSection';\nimport {PageHeader, Text} from './Text';\n\nexport function GenericError({\n  error,\n}: {\n  error?: {message: string; stack?: string};\n}) {\n  const heading = `Something\u2019s wrong here.`;\n  let description = `We found an error while loading this page.`;\n\n  // TODO hide error in prod?\n  if (error) {\n    description += `\\n${error.message}`;\n    // eslint-disable-next-line no-console\n    console.error(error);\n  }\n\n  return (\n    <>\n      <PageHeader heading={heading}>\n        <Text width=\"narrow\" as=\"p\">\n          {description}\n        </Text>\n        {error?.stack && (\n          <pre\n            style={{\n              padding: '2rem',\n              background: 'hsla(10, 50%, 50%, 0.1)',\n              color: 'red',\n              overflow: 'auto',\n              maxWidth: '100%',\n            }}\n            dangerouslySetInnerHTML={{\n              __html: addLinksToStackTrace(error.stack),\n            }}\n          />\n        )}\n        <Button width=\"auto\" variant=\"secondary\" to={'/'}>\n          Take me to the home page\n        </Button>\n      </PageHeader>\n      <FeaturedSection />\n    </>\n  );\n}\n\nfunction addLinksToStackTrace(stackTrace: string) {\n  return stackTrace?.replace(\n    /^\\s*at\\s?.*?[(\\s]((\\/|\\w\\:).+)\\)\\n/gim,\n    (all, m1) =>\n      all.replace(\n        m1,\n        `<a href=\"vscode://file${m1}\" class=\"hover:underline\">${m1}</a>`,\n      ),\n  );\n}\n", "import {Button} from './Button';\nimport {FeaturedSection} from './FeaturedSection';\nimport {PageHeader, Text} from './Text';\n\nexport function NotFound({type = 'page'}: {type?: string}) {\n  const heading = `We\u2019ve lost this ${type}`;\n  const description = `We couldn\u2019t find the ${type} you\u2019re looking for. Try checking the URL or heading back to the home page.`;\n\n  return (\n    <>\n      <PageHeader heading={heading}>\n        <Text width=\"narrow\" as=\"p\">\n          {description}\n        </Text>\n        <Button width=\"auto\" variant=\"secondary\" to={'/'}>\n          Take me to the home page\n        </Button>\n      </PageHeader>\n      <FeaturedSection />\n    </>\n  );\n}\n", "import {useLocation, useFetchers, useMatches} from '@remix-run/react';\nimport {\n  AnalyticsEventName,\n  getClientBrowserParameters,\n  sendShopifyAnalytics,\n  ShopifyAddToCartPayload,\n  ShopifyPageViewPayload,\n  useShopifyCookies,\n} from '@shopify/hydrogen';\nimport {useEffect} from 'react';\nimport {CartAction, I18nLocale} from '../lib/type';\n\nexport function useAnalytics(hasUserConsent: boolean, locale: I18nLocale) {\n  useShopifyCookies({hasUserConsent});\n  const location = useLocation();\n  const analyticsFromMatches = useDataFromMatches(\n    'analytics',\n  ) as unknown as ShopifyPageViewPayload;\n\n  const pageAnalytics = {\n    ...analyticsFromMatches,\n    currency: locale.currency,\n    acceptedLanguage: locale.language,\n    hasUserConsent,\n  };\n\n  // Page view analytics\n  // We want useEffect to execute only when location changes\n  // which represents a page view\n  useEffect(() => {\n    const payload: ShopifyPageViewPayload = {\n      ...getClientBrowserParameters(),\n      ...pageAnalytics,\n    };\n\n    sendShopifyAnalytics({\n      eventName: AnalyticsEventName.PAGE_VIEW,\n      payload,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location]);\n\n  // Add to cart analytics\n  const cartData = useDataFromFetchers({\n    formDataKey: 'cartAction',\n    formDataValue: CartAction.ADD_TO_CART,\n    dataKey: 'analytics',\n  }) as unknown as ShopifyAddToCartPayload;\n  if (cartData) {\n    const addToCartPayload: ShopifyAddToCartPayload = {\n      ...getClientBrowserParameters(),\n      ...pageAnalytics,\n      ...cartData,\n    };\n\n    sendShopifyAnalytics({\n      eventName: AnalyticsEventName.ADD_TO_CART,\n      payload: addToCartPayload,\n    });\n  }\n}\n\n/**\n * Collects data under a certain key from useMatches\n * @param dataKey - The key in `event.data` to collect data from\n * @returns A merged object of the specified key\n *\n * @example\n * ```tsx\n * import {\n *   useDataFromMatches\n * } from '@shopify/hydrogen';\n *\n * export async function loader({request, context}: LoaderArgs) {\n *   return defer({\n *     analytics: {\n *       shopId: 'gid://shopify/Shop/1',\n *     },\n *   });\n * }\n *\n * export default function App() {\n *   const analytics = useDataFromMatches('analytics');\n *\n *   console.log(analytics);\n *   // {\n *   //   shopId: 'gid://shopify/Shop/1',\n *   // }\n * ```\n **/\nfunction useDataFromMatches(dataKey: string): Record<string, unknown> {\n  const matches = useMatches();\n  const data: Record<string, unknown> = {};\n\n  matches.forEach((event) => {\n    const eventData = event?.data;\n    if (eventData && eventData[dataKey]) {\n      Object.assign(data, eventData[dataKey]);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Collects data under a certain key from useFetches.\n *\n * @param formDataKey - The form data key\n * @param formDataValue - The value of formDataKey\n * @param dataKey - the key in `fetcher.data` to collect data from\n * @returns A merged object of the specified key\n *\n * @example\n * ```tsx\n * // In routes/cart.tsx\n * import {\n *   useDataFromFetchers\n * } from '@shopify/hydrogen';\n *\n * export async function action({request, context}: ActionArgs) {\n *   const cartId = await session.get('cartId');\n *   ...\n *   return json({\n *     analytics: {\n *       cartId,\n *     },\n *   });\n * }\n *\n * // Anywhere when an action can be requested, make sure there is a form input and value\n * // to identify the fetcher\n * export function AddToCartButton({\n *   ...\n *   return (\n *     <fetcher.Form action=\"/cart\" method=\"post\">\n *       <input type=\"hidden\" name=\"cartAction\" value={CartAction.ADD_TO_CART} />\n *\n * // You can add additional data as hidden form inputs and it will also be collected\n * // As long as it is JSON parse-able.\n * export function AddToCartButton({\n *\n *   const analytics = {\n *     products: [product]\n *   };\n *\n *   return (\n *     <fetcher.Form action=\"/cart\" method=\"post\">\n *       <input type=\"hidden\" name=\"cartAction\" value={CartAction.ADD_TO_CART} />\n *       <input type=\"hidden\" name=\"analytics\" value={JSON.stringify(analytics)} />\n *\n * // In root.tsx\n * export default function App() {\n *   const cartData = useDataFromFetchers({\n *     formDataKey: 'cartAction',\n *     formDataValue: CartAction.ADD_TO_CART,\n *     dataKey: 'analytics',\n *   });\n *\n *   console.log(cartData);\n *   // {\n *   //   cartId: 'gid://shopify/Cart/abc123',\n *   //   products: [...]\n *   // }\n * ```\n **/\nfunction useDataFromFetchers({\n  formDataKey,\n  formDataValue,\n  dataKey,\n}: {\n  formDataKey: string;\n  formDataValue: unknown;\n  dataKey: string;\n}): Record<string, unknown> | undefined {\n  const fetchers = useFetchers();\n  const data: Record<string, unknown> = {};\n\n  for (const fetcher of fetchers) {\n    const formData = fetcher.submission?.formData;\n    const fetcherData = fetcher.data;\n    if (\n      formData &&\n      formData.get(formDataKey) === formDataValue &&\n      fetcherData &&\n      fetcherData[dataKey]\n    ) {\n      Object.assign(data, fetcherData[dataKey]);\n\n      try {\n        if (formData.get(dataKey)) {\n          const dataInForm: unknown = JSON.parse(String(formData.get(dataKey)));\n          Object.assign(data, dataInForm);\n        }\n      } catch {\n        // do nothing\n      }\n    }\n  }\n  return Object.keys(data).length ? data : undefined;\n}\n", "import {\n  defer,\n  type LinksFunction,\n  type MetaFunction,\n  type LoaderArgs,\n  type AppLoadContext,\n} from '@shopify/remix-oxygen';\nimport {\n  Links,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useLoaderData,\n  useMatches,\n} from '@remix-run/react';\nimport {\n  ShopifySalesChannel,\n  Seo,\n  type SeoHandleFunction,\n} from '@shopify/hydrogen';\nimport {Layout} from '~/components';\nimport {GenericError} from './components/GenericError';\nimport {NotFound} from './components/NotFound';\n\nimport styles from './styles/app.css';\nimport favicon from '../public/favicon.svg';\n\nimport {DEFAULT_LOCALE, parseMenu, type EnhancedMenu} from './lib/utils';\nimport invariant from 'tiny-invariant';\nimport {Shop, Cart} from '@shopify/hydrogen/storefront-api-types';\nimport {useAnalytics} from './hooks/useAnalytics';\n\nconst seo: SeoHandleFunction<typeof loader> = ({data, pathname}) => ({\n  title: data?.layout?.shop?.name,\n  titleTemplate: '%s | Hydrogen Demo Store',\n  description: data?.layout?.shop?.description,\n  handle: '@shopify',\n  url: `https://hydrogen.shop${pathname}`,\n});\n\nexport const handle = {\n  seo,\n};\n\nexport const links: LinksFunction = () => {\n  return [\n    {rel: 'stylesheet', href: styles},\n    {\n      rel: 'preconnect',\n      href: 'https://cdn.shopify.com',\n    },\n    {\n      rel: 'preconnect',\n      href: 'https://shop.app',\n    },\n    {rel: 'icon', type: 'image/svg+xml', href: favicon},\n  ];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  viewport: 'width=device-width,initial-scale=1',\n});\n\nexport async function loader({context}: LoaderArgs) {\n  const [cartId, layout] = await Promise.all([\n    context.session.get('cartId'),\n    getLayoutData(context),\n  ]);\n\n  return defer({\n    layout,\n    selectedLocale: context.storefront.i18n,\n    cart: cartId ? getCart(context, cartId) : undefined,\n    analytics: {\n      shopifySalesChannel: ShopifySalesChannel.hydrogen,\n      shopId: layout.shop.id,\n    },\n  });\n}\n\nexport default function App() {\n  const data = useLoaderData<typeof loader>();\n  const locale = data.selectedLocale ?? DEFAULT_LOCALE;\n  const hasUserConsent = true;\n\n  useAnalytics(hasUserConsent, locale);\n\n  return (\n    <html lang={locale.language}>\n      <head>\n        <Seo />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Layout\n          layout={data.layout as LayoutData}\n          key={`${locale.language}-${locale.country}`}\n        >\n          <Outlet />\n        </Layout>\n        <ScrollRestoration />\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n\nexport function CatchBoundary() {\n  const [root] = useMatches();\n  const caught = useCatch();\n  const isNotFound = caught.status === 404;\n  const locale = root.data?.selectedLocale ?? DEFAULT_LOCALE;\n\n  return (\n    <html lang={locale.language}>\n      <head>\n        <title>{isNotFound ? 'Not found' : 'Error'}</title>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Layout\n          layout={root?.data?.layout}\n          key={`${locale.language}-${locale.country}`}\n        >\n          {isNotFound ? (\n            <NotFound type={caught.data?.pageType} />\n          ) : (\n            <GenericError\n              error={{message: `${caught.status} ${caught.data}`}}\n            />\n          )}\n        </Layout>\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n\nexport function ErrorBoundary({error}: {error: Error}) {\n  const [root] = useMatches();\n  const locale = root?.data?.selectedLocale ?? DEFAULT_LOCALE;\n\n  return (\n    <html lang={locale.language}>\n      <head>\n        <title>Error</title>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Layout layout={root?.data?.layout}>\n          <GenericError error={error} />\n        </Layout>\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n\nconst LAYOUT_QUERY = `#graphql\n  query layoutMenus(\n    $language: LanguageCode\n    $headerMenuHandle: String!\n    $footerMenuHandle: String!\n  ) @inContext(language: $language) {\n    shop {\n      id\n      name\n      description\n    }\n    headerMenu: menu(handle: $headerMenuHandle) {\n      id\n      items {\n        ...MenuItem\n        items {\n          ...MenuItem\n        }\n      }\n    }\n    footerMenu: menu(handle: $footerMenuHandle) {\n      id\n      items {\n        ...MenuItem\n        items {\n          ...MenuItem\n        }\n      }\n    }\n  }\n  fragment MenuItem on MenuItem {\n    id\n    resourceId\n    tags\n    title\n    type\n    url\n  }\n`;\n\nexport interface LayoutData {\n  headerMenu: EnhancedMenu;\n  footerMenu: EnhancedMenu;\n  shop: Shop;\n  cart?: Promise<Cart>;\n}\n\nasync function getLayoutData({storefront}: AppLoadContext) {\n  const HEADER_MENU_HANDLE = 'main-menu';\n  const FOOTER_MENU_HANDLE = 'footer';\n\n  const data = await storefront.query<LayoutData>(LAYOUT_QUERY, {\n    variables: {\n      headerMenuHandle: HEADER_MENU_HANDLE,\n      footerMenuHandle: FOOTER_MENU_HANDLE,\n      language: storefront.i18n.language,\n    },\n  });\n\n  invariant(data, 'No data returned from Shopify API');\n\n  /*\n    Modify specific links/routes (optional)\n    @see: https://shopify.dev/api/storefront/unstable/enums/MenuItemType\n    e.g here we map:\n      - /blogs/news -> /news\n      - /blog/news/blog-post -> /news/blog-post\n      - /collections/all -> /products\n  */\n  const customPrefixes = {BLOG: '', CATALOG: 'products'};\n\n  const headerMenu = data?.headerMenu\n    ? parseMenu(data.headerMenu, customPrefixes)\n    : undefined;\n\n  const footerMenu = data?.footerMenu\n    ? parseMenu(data.footerMenu, customPrefixes)\n    : undefined;\n\n  return {shop: data.shop, headerMenu, footerMenu};\n}\n\nconst CART_QUERY = `#graphql\n  query CartQuery($cartId: ID!, $country: CountryCode, $language: LanguageCode)\n    @inContext(country: $country, language: $language) {\n    cart(id: $cartId) {\n      ...CartFragment\n    }\n  }\n\n  fragment CartFragment on Cart {\n    id\n    checkoutUrl\n    totalQuantity\n    buyerIdentity {\n      countryCode\n      customer {\n        id\n        email\n        firstName\n        lastName\n        displayName\n      }\n      email\n      phone\n    }\n    lines(first: 100) {\n      edges {\n        node {\n          id\n          quantity\n          attributes {\n            key\n            value\n          }\n          cost {\n            totalAmount {\n              amount\n              currencyCode\n            }\n            amountPerQuantity {\n              amount\n              currencyCode\n            }\n            compareAtAmountPerQuantity {\n              amount\n              currencyCode\n            }\n          }\n          merchandise {\n            ... on ProductVariant {\n              id\n              availableForSale\n              compareAtPrice {\n                ...MoneyFragment\n              }\n              price {\n                ...MoneyFragment\n              }\n              requiresShipping\n              title\n              image {\n                ...ImageFragment\n              }\n              product {\n                handle\n                title\n                id\n              }\n              selectedOptions {\n                name\n                value\n              }\n            }\n          }\n        }\n      }\n    }\n    cost {\n      subtotalAmount {\n        ...MoneyFragment\n      }\n      totalAmount {\n        ...MoneyFragment\n      }\n      totalDutyAmount {\n        ...MoneyFragment\n      }\n      totalTaxAmount {\n        ...MoneyFragment\n      }\n    }\n    note\n    attributes {\n      key\n      value\n    }\n    discountCodes {\n      code\n    }\n  }\n\n  fragment MoneyFragment on MoneyV2 {\n    currencyCode\n    amount\n  }\n\n  fragment ImageFragment on Image {\n    id\n    url\n    altText\n    width\n    height\n  }\n`;\n\nexport async function getCart({storefront}: AppLoadContext, cartId: string) {\n  invariant(storefront, 'missing storefront client in cart query');\n\n  const {cart} = await storefront.query<{cart?: Cart}>(CART_QUERY, {\n    variables: {\n      cartId,\n      country: storefront.i18n.country,\n      language: storefront.i18n.language,\n    },\n    cache: storefront.CacheNone(),\n  });\n\n  return cart;\n}\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime"]
}
